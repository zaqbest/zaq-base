apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-svc
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kafka
    spec:
      containers:
        - command:
            - sh
            - -c
            - 'exec kafka-server-start.sh /opt/kafka/config/server.properties --override broker.id=${HOSTNAME##*-} --override listeners=PLAINTEXT://:9093 --override zookeeper.connect=zok-0.zk-hs:2181,zok-1.zk-hs:2181,zok-2.zk-hs:2181 --override log.dir=/var/lib/kafka '
          env:
            - name: KAFKA_HEAP_OPTS
              value: -Xmx512M -Xms512M
            - name: KAFKA_OPTS
              value: -Dlogging.level=INFO
          image: registry.cn-hangzhou.aliyuncs.com/ccgg/k8skafka:v1
          imagePullPolicy: Always
          name: k8skafka
          ports:
            - containerPort: 9093
              name: server
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server=localhost:9093
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: "1"
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/kafka
              name: kafka-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      terminationGracePeriodSeconds: 300
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        creationTimestamp: null
        name: kafka-data
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 1Gi
        storageClassName: managed-nfs-storage
        volumeMode: Filesystem
      status:
        phase: Pending
